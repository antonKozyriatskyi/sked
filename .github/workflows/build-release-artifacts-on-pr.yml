name: Publish release AAB artifact

on:
  pull_request:
    branches:
      - dev

env:
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
  RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

jobs:
  publish-release-artifacts:
    name: Publish release AAB

    runs-on: ubuntu-latest

    if: |
      startsWith(github.head_ref, 'release/') && !startsWith(github.event.commits[0].message, 'Update version to')

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

#      - name: Checkout secret repo
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ secrets.KEYSTORE_GIT_REPO }}
#          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
#          path: ${{ secrets.KEYSTORE_REPO_TARGET }}
#
#      - name: Move google-services to app folder
#        run: mv "${{ secrets.KEYSTORE_REPO_TARGET }}/google-services.json" app

      - name: Grant execute permission for sh scripts
        run: |
          chmod +x gradlew
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/tag-release.sh"
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/update-version-code-and-name.sh"
          chmod +x "${GITHUB_WORKSPACE}/.github/workflows/push-updated-version.sh"

      - name: Get release name
        run: |
          branch="$GITHUB_HEAD_REF"
          releaseName="${branch#*/}"
          echo "release_name=$releaseName" >> $GITHUB_ENV

      - name: Update release name and version
        run: |
          "${GITHUB_WORKSPACE}"/.github/workflows/update-version-code-and-name.sh ${GITHUB_HEAD_REF} ${GITHUB_REPOSITORY} ${GITHUB_WORKSPACE} "${{ env.release_name }}" ${GITHUB_TOKEN}

#      - name: Build release AAB
#        run: ./gradlew bundleRelease --stacktrace
#
#      - name: Deploy to beta track
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: "${{ secrets.KEYSTORE_REPO_TARGET }}/service_account.json"
#          packageName: kozyriatskyi.anton.sked
#          releaseFiles: app/build/outputs/bundle/release/*.aab
#          track: beta
#          userFraction: 0.1
#          status: inProgress
#          whatsNewDirectory: distribution/changelog
#          mappingFile: app/build/outputs/mapping/release/mapping.txt

#      - name: Tag release version
#        if: success()
#        run: |
#         "${GITHUB_WORKSPACE}"/.github/workflows/tag-release.sh "${{ env.release_name }}"

      - name: Push updated version
        if: success()
        run: |
          "${GITHUB_WORKSPACE}"/.github/workflows/push-updated-version.sh "${GITHUB_WORKSPACE}" "${{ env.release_name }}" "${GITHUB_TOKEN}"

      - name: Create branch with updated version code and name
        if: success()
        run: |
          branchName="update-app-version-${{ env.release_name }}"
          lastCommitSha="$(git log -1 --format="%H")"
          git fetch
          git reset HEAD --hard
          git checkout -b dev origin/dev
          git checkout -b "$branchName"
          git cherry-pick "$lastCommitSha"
          git push -u origin "$branchName"
#          git remote set-url --push origin "https://antonKozyriatskyi:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}"

      - name: Create PR with new version to dev branch
        if: success()
        uses: peter-evans/create-pull-request@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ github.event.commits[0].message }}
          branch: dev
          delete-branch: true